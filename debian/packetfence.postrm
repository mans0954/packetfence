#!/bin/sh
# postrm script for packetfence
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
    ;;

    remove)
        #remove user and group pf
        if [ -x /etc/init.d/packetfence ]; then
            invoke-rc.d packetfence stop
        fi
        set +e
        userdel pf
        if [ $? -ne 0 ]; then
            echo "Unable to remove pf user"
        fi
        if [ -e /etc/lsb-release ]; then
            groupdel pf
            if [ $? -ne 0 ]; then
                echo "Unable to remove pf group"
            fi
        fi
        set -e
        # removing init scripts
        if [ -e /etc/lsb-release ]; then
            update-rc.d -f packetfence remove > /dev/null 2>&1
        else
            update-rc.d packetfence remove > /dev/null 2>&1
        fi
        # removing init scripts
    ;;
    purge)
        # purging all files
        # /usr/bin/find /usr/local/pf ! -path "*pfconfig*" ! -type d|sort|xargs rm
        /usr/bin/find /usr/local/pf ! -path "*pfconfig*" ! -path "/usr/local/pf" ! -path "usr/local/pf/lib"  ! -path "/usr/local/pf/bin" ! -path "/usr/local/pf/bin/pfcmd" -type d|sort -r|xargs rm -r
        ;;
    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
# vim: set shiftwidth=4:
# vim: set expandtab:
